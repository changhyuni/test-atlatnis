---
# StorageClass 정의
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ebs                              # StorageClass 이름: "ebs"
allowVolumeExpansion: true               # PVC의 용량 확장을 허용
provisioner: ebs.csi.aws.com             # AWS EBS CSI 드라이버 사용
volumeBindingMode: WaitForFirstConsumer  # Pod가 스케줄링된 노드를 기반으로 PV를 바인딩
parameters:
  type: gp3                              # EBS 볼륨 타입: gp3
  allowAutoIOPSPerGBIncrease: 'false'    # gp3 볼륨의 IOPS가 용량 증가에 따라 자동으로 확장
  encrypted: 'false'                     # 볼륨 암호화 활성화
reclaimPolicy: Delete                    # 라이프 사이클 설정
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs                          
spec:
  accessModes:
    - ReadWriteOnce                  # RWO (단일 노드에서 읽기/쓰기 가능)
  resources:
    requests:
      storage: 1Gi                   # 요청하는 스토리지 용량: 1Gi
  storageClassName: ebs              # PVC가 사용할 StorageClass 이름: "ebs"

---
# Pod 정의
apiVersion: v1
kind: Pod
metadata:
  name: ebs                        
spec:
  containers:
  - name: ebs                       
    image: centos                   
    command: ["/bin/sh"]             
    args: ["-c", "while true; do echo $(date -u) >> /data/out.txt; sleep 2; done"]
    volumeMounts:
    - name: ebs                      # 볼륨 이름: "ebs"
      mountPath: /data               # 컨테이너 내부에서 /data 경로에 볼륨 마운트
  volumes:
  - name: ebs                        # 볼륨 이름: "ebs"
    persistentVolumeClaim:
      claimName: ebs                 # 연결할 PVC 이름: "ebs"
